// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Plan {
  FREE
  PRO
}

enum Theme {
  LIGHT
  DARK
  SYSTEM
}

model User {
  id         String  @id @default(cuid())
  externalId String? @unique

  quotaLimit Int
  plan       Plan @default(FREE)

  theme Theme @default(SYSTEM)

  email     String   @unique
  apiKey    String   @unique @default(cuid())
  discordId String?
  webexId String?
  whatsappId String?
  slackId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  EventTypes EventType[]
  events           Event[]
  Quota           Quota[]

  @@index([email, apiKey])
}

model EventType {
  id    String  @id @default(cuid())
  name  String
  color Int
  emoji String?

  user   User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  events     Event[]

  @@unique([name, userId])
}

enum DeliveryStatus {
  PENDING
  DELIVERED
  FAILED
}

model Event {
  id               String @id @default(cuid())
  formattedMessage String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  name   String
  fields Json

  deliveryStatus DeliveryStatus @default(PENDING)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  EventType   EventType? @relation(fields: [EventTypeId], references: [id])
  EventTypeId String?

  @@index([createdAt])
}

model Quota {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  year  Int
  month Int
  count Int @default(0)

  updatedAt DateTime @updatedAt
}
